{"version":3,"sources":["components/Header.jsx","components/Main.jsx","components/About.jsx","components/Skills.jsx","components/Projects.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Main","About","Skills","Projects","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uMAgBeA,G,KAdA,WACb,OACE,6BACE,sEACA,6BACE,oCACA,wCACA,uCACA,0CCAOC,EARF,WACX,OACE,6BACE,+CCsBSC,EAzBD,WACZ,OACE,6BACE,gDACA,wEACA,m3BAeA,iDChBSC,EAJA,WACb,OAAO,0CCOMC,EARE,WACf,OACE,6BACE,qDCQSC,EAXC,WACd,OACE,6BACE,4CACA,qCACA,yCACA,wCCaSC,MAbf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.061432a1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h3>Claudia Custodio / Front End Developer</h3>\r\n      <div>\r\n        <p>About</p>\r\n        <p>What I do</p>\r\n        <p>Projects</p>\r\n        <p>Contact</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div>\r\n      <h1>SUCK MY CODE.</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h2>Claudia Custodio</h2>\r\n      <h3>Front-End Developer and Social Scientist</h3>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget\r\n        augue ante. Aliquam eleifend nunc id tortor eleifend, nec pellentesque\r\n        risus dapibus. Nulla ut lectus purus. Vestibulum ante ipsum primis in\r\n        faucibus orci luctus et ultrices posuere cubilia curae; Fusce a\r\n        ultricies velit. Nunc aliquet rutrum accumsan. Duis vitae varius metus.\r\n        Nunc venenatis in arcu vitae tincidunt. Suspendisse nibh felis,\r\n        porttitor varius laoreet eleifend, pretium sit amet nunc. Aenean in elit\r\n        at massa condimentum malesuada id ac ipsum. Nunc gravida ipsum purus,\r\n        vitae sollicitudin ex fermentum in. Nam erat purus, finibus at lorem et,\r\n        convallis accumsan erat. Praesent congue tellus in convallis\r\n        scelerisque. Aliquam nisi ex, dictum sed purus eu, pretium fringilla\r\n        odio. Aenean eros augue, vehicula vitae lectus non, malesuada suscipit\r\n        felis. Etiam at nisl quam.\r\n      </p>\r\n      <h3>Check my resume</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Skills = () => {\r\n  return <h1>What I do</h1>;\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <div>\r\n      <h1>Some of my projects</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <h1>Get in touch</h1>\r\n      <h3>Email</h3>\r\n      <h3>Linked in</h3>\r\n      <h3>Github</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport About from \"./components/About\";\nimport Skills from \"./components/Skills\";\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <About />\n      <Skills />\n      <Projects />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}